#!/usr/bin/env zsh

setopt errexit

# NOT supposed to be called manually.
# Use ./build in the root directory instead.

[[ -n $DEBUG ]] && setopt xtrace

confyml=$1
builddir=$2
local_images=$3 # 1 or 0
ga_tracking_id=$4 # Optional

here=$0:A:h
root=${${:-$here/..}:A}
assetsdir=$builddir/assets
mkdir -p $assetsdir

print_progress () print -R $'\e[32m'"$*"$'\e[0m' >&2

# Support the env var NO_BUILD_HTML because regenerating production HTML is
# sloooooow, and sometimes we only want to test some JS/CSS changes.
if [[ -z $NO_BUILD_HTML ]]; then
    print_progress 'Generating HTML...'
    if [[ -n $PYTHON ]]; then
        # Use the specified Python
        CONFFILE=$confyml $PYTHON $root/generate
    else
        CONFFILE=$confyml $root/generate $confyml
    fi
fi

print_progress 'Minifying and concatenating JavaScript...'
[[ -h $assetsdir/js ]] && rm $assetsdir/js
mkdir -p $assetsdir/js
jsfile=$assetsdir/js/build.min.js
if [[ -n $ga_tracking_id ]]; then
    echo "window.gaTrackingId='$ga_tracking_id';" >$jsfile
else
    cat /dev/null >$jsfile
fi
cat $root/bower_components/jquery/dist/jquery.min.js >>$jsfile
uglifyjs \
    $root/bower_components/fancybox/source/jquery.fancybox.js \
    $root/bower_components/qtip2/jquery.qtip.js \
    $root/bower_components/onScreen/jquery.onscreen.js \
    $root/bower_components/mousetrap/mousetrap.js \
    $root/bower_components/mousetrap/plugins/pause/mousetrap-pause.js \
    $root/bower_components/jquery_lazyload/jquery.lazyload.js \
    $root/js/ui.js \
    -c -m \
    >>$jsfile

print_progress 'Minifying and concatenating CSS...'
[[ -h $assetsdir/css ]] && rm $assetsdir/css
mkdir -p $assetsdir/css
cssfile=$assetsdir/css/build.min.css
cat $root/bower_components/normalize-css/normalize.css \
    $root/bower_components/fancybox/source/jquery.fancybox.css \
    $root/bower_components/qtip2/jquery.qtip.css \
    $root/css/theme.css \
    | cleancss -o $cssfile
# This is kind of stupid, but we need to copy fancybox's image assets into
# css/, or we'll have to replace the paths in jquery.fancybox.css which is more
# complicated.
cp $root/bower_components/fancybox/source/*.(gif|png) $assetsdir/css

print_progress 'Syncing image and audio assets...'
[[ -h $assetsdir/images ]] && rm $assetsdir/images
[[ -h $assetsdir/audio ]] && rm $assetsdir/audio
[[ -h $assetsdir/data ]] && rm $assetsdir/data
# -rLptgoD is equivalent to -a with -l replaced by -L, that is, follow symlinks
# -rather than copying symllinks as is.
(( local_images )) && image_source_dir=_ship || image_source_dir=_ship-sina
rsync -rLptgoD --link-dest=$root/images/ $root/images/$image_source_dir/ $assetsdir/images
rsync -rLptgoD --link-dest=$root/audio/ $root/audio/_ship/ $assetsdir/audio
rsync -rLptgoD --link-dest=$root/data/ $root/data/_ship/ $assetsdir/data
rsync -a $root/images/favicon.ico $builddir
